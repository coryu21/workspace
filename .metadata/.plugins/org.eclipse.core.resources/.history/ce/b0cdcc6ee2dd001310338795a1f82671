public class Graham extends Common {
	int N = 16;
	int x_value[] = { 2, 12, 3, 10, 14, 1, 13, 6, 8, 7, 15, 16, 4, 11, 9, 5 };
	int y_value[] = { 6, 16, 12, 11, 4, 10, 8, 7, 9, 5, 3, 14, 15, 1, 13, 2 };
	char c_value[] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
			'L', 'M', 'N', 'O', 'P' };

	public void SelectionSort(Point1 p[], int n) {
		int i, j, min;
		for (i = 1; i < n; i++) {
			min = i;
			for (j = i + 1; j <= n; j++) {
				if (theta(p[1], p[j]) < theta(p[1], p[min]))
					min = j;
				swap(p, min, i);
			}
		}
		for (i = 1; i <= n; i++) {
			System.out.print((char) p[i].c + " ");
		}
		System.out.println();
	}

	

	public int scan(Point1 p[], int n) {
		int i, min, M;
		for (min = 1, i = 2; i <= n; i++) {
			if (p[i].y < p[min].y)
				min = i;
		}
		for (i = 1; i <= n; i++) {
			if (p[i].y == p[min].y) {
				if (p[i].x > p[min].x)
					min = i;
				swap(p, 1, min);
			}
		}
		for (i = 1; i <= n; i++) {
			System.out.print((char) p[i].c + " ");
		}
		System.out.println();
		q_sort(p, 2, n);
		// SelectionSort(p, n);
		p[0] = p[n];
		for (M = 3, i = 4; i <= n; i++) {
			while (ccw(p[M], p[M - 1], p[i]) >= 0)
				M--;
			M++;
			swap(p, i, M);
		}
		return M;
	}
/*
	public static void main(String args[]) { // 인덱스 1부터 시작하게!
		Graham gh = new Graham();

		int i, M;
		Point1 p[] = new Point1[gh.N + 1];
		p[0] = new Point1();
		for (i = 1; i <= gh.N; i++) {
			p[i] = new Point1();
			p[i].x = gh.x_value[i - 1];
			p[i].y = gh.y_value[i - 1];
			p[i].c = gh.c_value[i - 1];
			System.out.println((char) p[i].c + "  " + p[i].x + ", " + p[i].y);
		}

		M = gh.scan(p, gh.N);

		for (i = 1; i <= M; i++) {
			System.out.printf("%c ", p[i].c);
		}
		System.out.println();
	}
	*/
}
