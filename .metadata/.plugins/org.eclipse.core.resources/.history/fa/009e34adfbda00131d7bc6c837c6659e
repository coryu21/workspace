import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class RandomCharacters extends JFrame implements ActionListener {
	private final static int SIZE = 3;
	private JCheckBox checkboxes[];
	private Lock lockObject = new ReentrantLock(true);

	private RunnableObject[] randomCharacter = new RunnableObject[SIZE];

	public RandomCharacters() {
		checkboxes = new JCheckBox[SIZE];
		setLayout(new GridLayout(SIZE, 2, 5, 5));
		ExecutorService runnel = Executors.newFixedThreadPool(SIZE);

		for (int count = 0; count < SIZE; count++) {
			JLabel outputJLabel = new JLabel();
			outputJLabel.setBackground(Color.GREEN);
			outputJLabel.setOpaque(true);
			add(outputJLabel);

			checkboxes[count] = new JCheckBox("Suspended"); 
			checkboxes[count].addActionListener(this);
			add(checkboxes[count]);
			
			randomCharacter[count] = new RunnableObject(lockObject, outputJLabel);
			
			runner.execute(randomCharacters[count]);
		}
	}
}
